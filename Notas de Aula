Comando GIT
Git commit -m "Messagem"
Git push -> Empurra para o Repositorio
Git Pull -> Traz do Repositorio

Exercicio até a proxima AULA
1. Buscar no google um template gitignore
2. Criar um arquivo .gitinore se não existir
3. Criar um programa "Hello World"
4. Compilar, Testar
5. Adicionar ao index (stage)
6. Commitar, submeter ao github e verificar no site

Exercicio de comprar ovos e pegar roupa.
1. Chegar em Casa
2. Pegar o dinheiro na carteira
3. Pegar a chave do carro
4. Ir ao mercado mais proximo
5. Ir na seção onde estão os ovos
6. Escolher uma duzia de ovos brancos
7. Verificar a data de vencimento na embalagem
8. Escolher a data mais posterior
9. Levar ao caixa para pagamento
10. Guardar os ovos no carro
11. Passar na lavanderia para pegar as roupas
12. colocar no carro
13. ir para casa 
14. colocar a chave do carro na estante
15. Guardar os ovos na geladeira
16. Guardar as roupas no guarda roupa
17. sentar no sofá


31/03/2017
Criar uma pilha com 10 elementos e imprimir,
Criar uma pilha para adicionar 10 elementos da pilha.
http://ouropreto.ifmg.edu.br/tp/slides/aula-04-listas-filas-e-pilhas
https://pt.slideshare.net/adrianots/estrutura-de-dados-pilhas


https://www.ime.usp.br/~pf/algoritmos/index.html#C-language

http://www.inf.pucrs.br/~pinho/PRGSWB/

http://mtm.ufsc.br/~azeredo/cursoC/aulas/c410.html#c411.html

Estudo sobre pilhas
#include <stdio.h>
#include <stdlib.h>
#define MAX 50

typedef struct {
  int n;
  float vet[MAX];
} Pilha;

typedef struct {
  float info;
  struct N0* anterior;
} No;

typedef struct {
  No* topo;
} Pilha;


Pilha* criar(void){
 Pilha *p;
 p = (Pilha*) malloc(sizeof(Pilha));
 p->n = 0;
 
 return p;
 }
 
void inserir(Pilha *p, float v){
   
   if(p->n==MAX){
     printf("Estouro de pilha.\n");
     exit (1);
   }
   p->vet[p->n] = v;
   p->n++;
 }
 
void imprimir(Pilha *p){
   int i;
   for(i=p->n-1; i>=0; i--)
      printf("%f\n", p->vet[i]);
 }
 
int main(){
   Pilha* p=criar();
   inserir(p, 20.0);
   imprimir(p);
 }


